plugins {
    id "com.android.application"
    id "com.google.gms.google-services"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "org.jetbrains.kotlin.plugin.serialization"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {
    compileSdkVersion 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "optimy.com.my"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        buildConfigField 'String', 'PROJECT_NUM', '"837940125447"'
        buildConfigField 'String', 'UNIQUE_ID', '"nI2qo2vAmRoPbdgE2tfJ"'
    }

    signingConfigs {
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    flavorDimensions 'main'
    productFlavors {
        uat {
            dimension 'main'
            buildConfigField 'String', 'ACCESS_KEY', '"gIQ8Kpl07IgyNEYXMUED2F4DDPyF4Bbii0O0Jrmg+s6fAg=="'
            buildConfigField 'String', 'SECRET_KEY', '"U7L7mwO1TJxqCRphvxO7b1WgHhBzgK2PK0m4DbYv2KQ="'
            buildConfigField 'String', 'ATTESTATION_HOST', '"https://mpos-uat.fasspay.com:9001"'
            buildConfigField 'String', 'ATTESTATION_CERT_PINNING', '"sha256/BJlJjxY7OHxhAz6yqy2gm58+qlP0AGwnBHDIG6zkhfU="'
            buildConfigField 'String', 'DEVELOPER_ID', '"ZCh9mzZXqHzezf4"'
        }
        production {
            dimension 'main'
            buildConfigField 'String', 'ACCESS_KEY', '"gIQ8Kpl07IgyNEYXMUED2F4DDPyF4Bbii0O0Jrmg+s6fAg=="'
            buildConfigField 'String', 'SECRET_KEY', '"EtAt3w7DbujRne0lc42zfJffe9xW38o/HIoLtRjT6AU="'
            buildConfigField 'String', 'ATTESTATION_HOST', '"https://tamserver.fasspay.com:9441/fasspay/api"'
            buildConfigField 'String', 'ATTESTATION_CERT_PINNING', '"sha256/Pnf3MmT8TYBTdSpaDJ1cPY/wZo3UkeQgJUXnOwhTeLc="'
            buildConfigField 'String', 'DEVELOPER_ID', '"tS03BuqnuTWXHXh"'
        }
    }
}

flutter {
    source '../..'
}

dependencies {

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.1.0')

    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries

    implementation "com.android.support:multidex:1.0.3"
    implementation files('libs/freeimagelibrary.jar')
    implementation files('libs/IminLibs.jar')

    implementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    debugImplementation (name:'RMSSDKTOP-debug', ext:'aar')
    releaseImplementation (name:'RMSSDKTOP-release', ext:'aar')
    implementation (name:'VisaSensoryBranding', ext:'aar')
    implementation (name:'ssmobile-tee-reader-engine-release', ext:'aar')

    implementation 'com.google.android.play:integrity:1.0.2'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.squareup.okhttp3:okhttp:3.14.7'
    implementation 'androidx.room:room-runtime:2.2.5'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0'

}
